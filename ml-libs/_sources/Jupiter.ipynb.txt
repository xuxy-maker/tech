{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "# Jupyter Notebook\n",
    "----\n",
    "\n",
    "\n",
    "本节中，介绍Jupyter Notebook的各种基本操作与使用。\n",
    "\n",
    "\n",
    "## 开始Jupyter Notebook\n",
    "<br>\n",
    "\n",
    "Jupyter的安装，具体情况因环境而异，不作详细说明。诸如pip安装，Anaconda安装等各种方法。\n",
    "\n",
    "云环境上还有一些免费的服务运行Jupyter Notebook。\n",
    "\n",
    "　　[Try Jupyter!](https://try.jupyter.org/)<br>\n",
    "　　[SageMathCloud](https://cloud.sagemath.com/)\n",
    "\n",
    "\n",
    "## Jupyter Notebook基本使用\n",
    "\n",
    "<br>\n",
    "\n",
    "　コマンドプロンプトから次のように入力すると、サーバが起動しブラウザが起動して、Jupyter Notebookが表示されます。\n",
    "\n",
    "在命令行输入以下内容时，启动服务器。\n",
    "\n",
    "`$ jupyter notebook`\n",
    "\n",
    "默认情况下，使用本地主机端口8888，以通过指定 –port选项来指定其它端口。\n",
    "\n",
    "`$ jupyter notebook --port 9000`\n",
    "\n",
    "启动后，浏览器会出现一下类似画面。画面会列出当前目录中的文件。\n",
    "\n",
    "![alt](img/news013_010.jpg)\n",
    "\n",
    "\n",
    "## 打开一个新的笔记本\n",
    "<br>\n",
    "\n",
    "打开新Notebook时，如下所示从右侧的New按钮中选择Python 3。\n",
    "\n",
    "![alt](img/news013_020.jpg)\n",
    "创建Notebook\n",
    "\n",
    "\n",
    "## 输入并运行代码\n",
    "<br>\n",
    "输入代码。\n",
    "\n",
    "![alt](img/news013_030.jpg)\n",
    "代码（执行之前） 按Shift +Enter键，执行代码（评估单元格）。\n",
    "\n",
    "![alt](img/news013_040.jpg)\n",
    "代码（执行后） 　将显示单元格中最后一行的评估结果。\n",
    "\n",
    "执行后，将创建一个新的单元格。可以在其中输入新代码，按 Shift + Enter 来连续运行它们。 可以通过单击已执行的单元格来编辑内容，然后重试。\n",
    "\n",
    "此外，使用Ctrl + Enter 键也可以执行单元格，但不会创建新的单元格。\n",
    "\n",
    "![alt](img/news013_050.jpg)\n",
    "多单元格 在一个Notebook中，单元格被视为一系列sessoin，读入的数据和变量一直有效。导入后，无需重新导入其他单元中。单元格最后一行的评级值显示在该单元格下方。也就是说， 输入变量名，则将显示该变量的值。\n",
    "\n",
    "\n",
    "## 停止Jupyter Notebook\n",
    "<br>\n",
    "\n",
    "要停止Jupyter Notebook，在运行Jupyter Notebook的控制台屏幕console上按　Ctrl + C 键，显示信息后。按y键。\n",
    "\n",
    "| he Jupyter Notebook is running at: http://localhost:8888/\n",
    "| Shutdown this notebook server (y/[n])?\n",
    "停止执行代码\n",
    "\n",
    "在执行繁重的处理途中，可以中途停止。 在“Kernel”菜单中选择“Interupt”来停止。 “Kernel”菜单中还有一个“restat”项，将重新启动服务器。\n",
    "\n",
    "![alt](img/news013_060.jpg)\n",
    "Kernel menu\n",
    "\n",
    "## 编辑单元格\n",
    "<br>\n",
    "使用Edit菜单编辑单元格。特别是「Delete Cells」、「Split Cell」、「Merge Cell Above」（上）、「Merge Cell Below」（下）使用起来很方便。\n",
    "\n",
    "![alt](img/news013_070.jpg)\n",
    "\n",
    "## 显示Pandas的DataFrame\n",
    "<br>\n",
    "通常变量的评估值以文本格式显示，但Pandas DataFrame以表格格式显示，如下所示。\n",
    "\n",
    "![alt](img/news013_080.jpg)\n",
    "\n",
    "## 绘制Matplotlib图\n",
    "<br>\n",
    "在Notebook中绘制Matplotlib图形，需指定「%matplotlib inline」。\n",
    "\n",
    "![alt](img/news013_090.jpg)\n",
    "\n",
    "\n",
    "## 其他魔术命令\n",
    "<br>\n",
    "\n",
    "以“％”开头的命令称为魔术命令。如％timeit。测量代码的执行时间。\n",
    "\n",
    "![alt](img/news013_100.jpg)\n",
    "还有其他魔术命令，有关信息，在单元格中键入「%magic」，然后按Shift + Enter，获取详细的文档。\n",
    "\n",
    "![alt](img/news013_110.jpg)\n",
    "\n",
    "\n",
    "## 函数，方法，类等的帮助信息\n",
    "<br>\n",
    "\n",
    "要获得有关函数，方法，类等的帮助信息，在函数名称，方法名和类名之后添加？，然后按 Shift + Enter 键。\n",
    "\n",
    "![alt](img/news013_120.jpg)\n",
    "使用??，则显示相应部分的源代码。\n",
    "\n",
    "![alt](img/news013_130.jpg)\n",
    "\n",
    "## Markdown格式输入文本\n",
    "<br>\n",
    "\n",
    "除了代码，还可以以Markdown格式输入文本。需要在文稿和执行代码混在的演示文稿时，很方便。从右上方的下拉菜单中选择Markdown菜单，写Markdown文本。\n",
    "\n",
    "![alt](img/news013_140.jpg)\n",
    "\n",
    "创建Markdown文档\n",
    "\n",
    "，以Markdown格式输入文本，然后按 Shift + Enter键设置文本格式。\n",
    "\n",
    "![alt](img/news013_150.jpg)\n",
    "Markdown文本示例（格式化之前）\n",
    "\n",
    "![alt](img/news013_160.jpg)\n",
    "Markdown文本示例（格式化后）\n",
    "\n",
    "可以将以这种方式创建的页面导出为HTML形式。使用起来很方便。\n",
    "\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.5.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
